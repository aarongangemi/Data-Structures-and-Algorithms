README File: By Aaron Gangemi (19447337)Files and Dependencies:CandidateClass: The candidate Class is a class which is a container class used to construct the candidate. This class is used to store data for the sorting in the list nominees. The candidate class stores:- State- Party- Division- Division ID- Surname- FirstnameThis information is set by calling the constructor and passing in values. This class is dependent on the IOClass as the values are obtained from the file.DSAGraph: The DSAGraph class is used to construct an itinerary. This graph is dependent on the IOClass as it obtains the values from the file. Although the graph prints an itinerary, you will find that the functionality and logic for the graph is wrong. The graph generates an itinerary by assuming the user starts and the first marginal division and finishes at the last. The graph does not calculate the shortest path, hence the logic being wrong. In addition, the second dependency of the DSAGraph class is the DSA Graph List which is a linked list class which is used for insertion of data into the graph.DSAGraphList: The DSAGraphList Class is a linked list class which is used for the graph. It�s operations are those of a linked list, however this class is solely used for the graph. There are no file dependencies for this class.DSALinkedList: The DSALinkedList class is a linked list which is being reused from the Data Structures and Algorithms Practical 4. This file is used several times throughout the program. Firstly, every time a file is read in, this class is used to read the file into a corresponding linked list. The class contains insertion, removal and iterative methods for linked list manipulation. In addition, the DSALinkedList class is used throughout other functions such as the graph, list by margin and nominee search. IOClass: The IOClass is solely used for reading in each file. The file contains methods to read in the data. A dependency of this file is the DSALinkedList class which inserts each line into a linked list after the file is read in. In addition, the second dependency is the files provided. The IOClass would not be able to read in the file without the file in the existing directory.ItineraryClass: The ItineraryClass is used for the final function of the program. It uses the DSALinkedList class, DSAGraph class and the ListByMargin Class to store the values in an itinerary. The class contains an �addToItinerary� function which stores each marginal seat and its distance from the next in the DSAGraph. In addition, this class contains several methods which split the String stored in the DSALinkedList in order to extract several components.ListByMargin: The ListByMargin Class is used for calculating the margins in my program. The function operates by using 4 Linked Lists. One list for the votes for the party and one list for the votes against that party, and 2 temp lists used to calculate the marginal seats. In addition, it utilizes the DSALinkedList class to store the data initially before passing it to the next list. The class contains several methods which call java�s split method which extracts components to pass into the tree and used to calculate the margin.ListNominees: The ListNominees Class is used for the first part of the program. Its purpose is to store and sort the data of the nominees. It does this by using an array of Candidate objects and sorting on the candidate class fields. This class is dependent on both the candidate Class and the DSALinkedList class in which the lines are read into before processing for the sort.Main: The Main Class� sole purpose is to call the required functionality in order for the program to work. When the program is run, it starts by reading in all the files into its corresponding linked list and displaying a menu to the user, giving the user a variety of options. Based on what the user selects, the main will call the methods to run the program. For example, if the user selects 4 then the program will display the itinerary. The main menu is iterated after every function until the user enters 0. The main also contains methods which require users to enter extra data such as filters, and menu options. The Main classes dependencies are every class created and used for the programNominee Search: The nominee search Class is used for the second part of the program. It asks the user to search for a nominee based on the last name. It then calls Java�s String �startswith� method on the last name of the candidate and Prints it if the candidate meets the criteria. This file is dependent on the DSALinkedList class as it requires the file to be read in.